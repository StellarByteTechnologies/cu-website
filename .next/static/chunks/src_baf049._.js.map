{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shubhamsharma/Documents/2025/cu-main/cu-website/src/components/DoctorTestimonialSection.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\nimport Image from 'next/image';\n\ninterface DoctorTestimonial {\n  doctorImage: string;\n  videoSrc: string;\n  testimonialText: string;\n  svgPath: string;\n  name: string;\n  occupation: string;\n}\n\ninterface DoctorTestimonialSectionProps {\n  testimonials: DoctorTestimonial[];\n  slideInterval?: number; // in milliseconds, default is 5000ms\n  layout?: 'left' | 'right'; // Control the layout position\n}\n\nconst DoctorTestimonialSection: React.FC<DoctorTestimonialSectionProps> = ({\n  testimonials,\n  slideInterval = 5000,\n  layout = 'left',\n}) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentSlide((prevSlide) => (prevSlide + 1) % testimonials.length);\n    }, slideInterval);\n\n    return () => clearInterval(interval);\n  }, [testimonials.length, slideInterval]);\n\n  const { doctorImage, videoSrc, testimonialText, svgPath, name, occupation } =\n    testimonials[currentSlide];\n\n  // Left Section (Doctor Image + Name & Occupation)\n  const leftSection = (\n    <div className=\"w-full sm:w-[400px] md:w-[500px] lg:w-[539px] h-[300px] sm:h-[400px] md:h-[500px] lg:h-[632px] rounded-[12px] overflow-hidden relative\">\n      <Image\n        src={doctorImage}\n        alt=\"Doctor\"\n        layout=\"fill\"\n        objectFit=\"cover\"\n        className=\"rounded-[12px]\"\n      />\n\n      {/* Name & Occupation Container */}\n      <div className=\"absolute bottom-0 left-0 w-full h-[100px] sm:h-[120px] md:h-[140px] lg:h-[160px] bg-white rounded-t-[12px] p-[12px] md:p-[16px] flex flex-col\">\n        {/* Name */}\n        <p className=\"text-[20px] sm:text-[24px] md:text-[30px] lg:text-[36px] font-medium text-black leading-[1.5] truncate\">\n          {name}\n        </p>\n\n        {/* Separator Line */}\n        <div className=\"w-full h-[1px] bg-black my-[4px] md:my-[6px]\"></div>\n\n        {/* Occupation */}\n        <p className=\"text-[14px] sm:text-[16px] font-medium text-black truncate\">\n          {occupation}\n        </p>\n      </div>\n    </div>\n  );\n\n  // Right Section (Video + Testimonial)\n  const rightSection = (\n    <div className=\"flex flex-col gap-[12px] md:gap-[16px] w-full sm:w-[400px] md:w-[500px] lg:w-[764px]\">\n      {/* Video Section */}\n      <div className=\"w-full h-[200px] sm:h-[250px] md:h-[350px] lg:h-[401px] rounded-[12px] overflow-hidden relative\">\n        <video\n          className=\"w-full h-full object-cover rounded-[12px]\"\n          src={videoSrc}\n          autoPlay\n          muted\n          loop\n          controls\n        />\n      </div>\n\n      {/* Testimonial Text Section */}\n      <div className=\"w-full bg-[#F8F8F8] rounded-[12px] p-4 relative flex items-center justify-center h-[150px] sm:h-[180px] md:h-[200px] lg:h-[215px]\">\n        {/* SVG on Top Left */}\n        <div className=\"absolute top-4 left-4 w-[40px] sm:w-[48px] md:w-[60px] lg:w-[68px] h-[28px] sm:h-[32px] md:h-[40px] lg:h-[47px]\">\n          <Image\n            src={svgPath}\n            alt=\"Quote Icon\"\n            width={68}\n            height={47}\n            className=\"object-contain\"\n          />\n        </div>\n\n        {/* Testimonial Text */}\n        <p className=\"w-full md:w-[536px] text-[16px] sm:text-[18px] md:text-[20px] font-normal leading-[1.5] text-black text-center\">\n          {testimonialText}\n        </p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div\n      className={`flex flex-col md:flex-row gap-[16px] md:gap-[24px] transition-all duration-500 ${\n        layout === 'right' ? 'md:flex-row-reverse' : ''\n      }`}\n    >\n      {leftSection}\n      {rightSection}\n    </div>\n  );\n};\n\nexport default DoctorTestimonialSection;\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAmBA,MAAM,2BAAoE,CAAC,EACzE,YAAY,EACZ,gBAAgB,IAAI,EACpB,SAAS,MAAM,EAChB;;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8CAAE;YACR,MAAM,WAAW;+DAAY;oBAC3B;uEAAgB,CAAC,YAAc,CAAC,YAAY,CAAC,IAAI,aAAa,MAAM;;gBACtE;8DAAG;YAEH;sDAAO,IAAM,cAAc;;QAC7B;6CAAG;QAAC,aAAa,MAAM;QAAE;KAAc;IAEvC,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,GACzE,YAAY,CAAC,aAAa;IAE5B,kDAAkD;IAClD,MAAM,4BACJ,6LAAC;QAAI,WAAU;;0BACb,6LAAC,gIAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAI;gBACJ,QAAO;gBACP,WAAU;gBACV,WAAU;;;;;;0BAIZ,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAE,WAAU;kCACV;;;;;;kCAIH,6LAAC;wBAAI,WAAU;;;;;;kCAGf,6LAAC;wBAAE,WAAU;kCACV;;;;;;;;;;;;;;;;;;IAMT,sCAAsC;IACtC,MAAM,6BACJ,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAU;oBACV,KAAK;oBACL,QAAQ;oBACR,KAAK;oBACL,IAAI;oBACJ,QAAQ;;;;;;;;;;;0BAKZ,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAK;4BACL,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAU;;;;;;;;;;;kCAKd,6LAAC;wBAAE,WAAU;kCACV;;;;;;;;;;;;;;;;;;IAMT,qBACE,6LAAC;QACC,WAAW,CAAC,+EAA+E,EACzF,WAAW,UAAU,wBAAwB,IAC7C;;YAED;YACA;;;;;;;AAGP;GA7FM;KAAA;uCA+FS"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}